    Once AWS devpay has successfully processed an activation request it informs
  the webserver by passing it an activation key.

    Storage service setup, then proceeds to execute several ordered modular tasks.  

    To limit the scope of server failure we (will) run the automation for the
    tasks on a separate EC2 instance.  The flappserver client server model is
    used for communication between the machines. *Flappserver (stands for
    "The Foolscap Application Server":
    http://foolscap.lothar.com/docs/flappserver.html) 

    The flappserver runs on the "automation" EC2 server instance. It provides
    the storage-setup service.  This service is used by the corresponding
    flappclient which runs on the webserver.  The client knows about this
    service (and only this service because it has subscribed to it using the
    flappserver's storage-setup service's furl: A FURL THAT I SUPPOSE WE
    SHOULD KEEP SECRET?).



  These are:

  (1) Activate an AWS devpay "desktop product":
      * This associates the customer's payment credentials with a
  particular product.
      -- Receives:
          1. Activation Key, a short lived token associated with the
  customer's payment credential.
          2. The long form of the product name, a unique reference to the
  devpay product the customer has selected.

      -- Returns: 
          1. A secret access key
          2. The access key's ID, XXXwhy both this and the last?  I don't know yet.
          3. A user token, that is specific to the customer-product-payment credentials.
   
  (2) Verify the Access Key and ID:
      * This checks that the customer's payment credentials have satisfied devpay's
  legitimacy criteria.  We only proceed further upon success.
      -- Receives:
          1. Access Key ID
          2. Secret Access Key
          3. User Token
          4. Product Token.
    
  (3) Create DevPay associated S3 bucket:
  (4) Create EC2 Server
  (5) Build and configure tahoe storage server and introducer on EC2
  (6) Notify (optionally with encryption) customer via email of introducer furl.         


